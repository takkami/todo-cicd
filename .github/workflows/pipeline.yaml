name: Todo App CI/CD Pipeline

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build Phase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Check built classes
        run: |
          grep -R "bg-red-500" -n dist || (echo "❌ dist に red クラスが見当たりません（古いソースか Tailwind パージ）"; exit 1)

      - name: Write build metadata
        run: |
          mkdir -p dist
          {
            echo "commit=${GITHUB_SHA}"
            echo "built_at=$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          } > dist/__build.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  test:
    name: Test Phase
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test --if-present

  deploy:
    name: Deploy Phase
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist

      - name: Sanity check artifact layout
        run: |
          test -d dist || (echo "❌ dist not found"; ls -la; exit 1)
          [ -d dist/dist ] && { echo "❌ nested dist/dist detected"; exit 1; }
          ls -la dist | head

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Auth to Google Cloud (sets ADC)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy Firebase
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
        run: |
          firebase deploy --project todoapp-1758903137 --only hosting --non-interactive

      - name: Verify production URL content
        run: |
          set -e
          for URL in \
            "https://todoapp-1758903137.web.app" \
            "https://todoapp-1758903137.firebaseapp.com"
          do
            echo "Checking $URL"
            curl -fsS "$URL/?v=$(date +%s)" | grep -q "Todoアプリ!" && { echo "✅ Content ok at $URL"; exit 0; }
          done
          echo "❌ 本番に 'Todoアプリ!' が見つかりません（キャッシュ/ビルド内容を確認）"
          exit 1

      - name: Verify production version file
        run: |
          curl -fsS "https://todoapp-1758903137.web.app/__build.txt" || (echo "❌ __build.txt が配信されていません"; exit 1)
