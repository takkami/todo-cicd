name: Todo App CI/CD Pipeline

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: Build Phase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Smoke check build outputs
        run: |
          test -f dist/index.html
          ls dist/assets | grep -E '^index-.*\.css$' >/dev/null
          ls dist/assets | grep -E '^index-.*\.js$'  >/dev/null
          grep -R "Todoアプリ!" -n dist/assets/*.js || { echo "❌ bundle に 'Todoアプリ!' が見当たりません"; exit 1; }

      - name: Write build metadata
        run: |
          mkdir -p dist
          {
            echo "commit=${GITHUB_SHA}"
            echo "built_at=$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          } > dist/__build.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  test:
    name: Test Phase
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test --if-present

  deploy:
    name: Deploy Phase
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist

      - name: Sanity check artifact layout
        run: |
          test -d dist || (echo "❌ dist not found"; ls -la; exit 1)
          [ -d dist/dist ] && { echo "❌ nested dist/dist detected"; exit 1; }
          ls -la dist | head

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Auth to Google Cloud (sets ADC)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy Firebase
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
        run: |
          firebase deploy --project todoapp-1758903137 --only hosting --non-interactive

      - name: Verify production assets (JS contains title)
        run: |
          set -e
          for BASE in "https://todoapp-1758903137.web.app" "https://todoapp-1758903137.firebaseapp.com"; do
            echo "Checking $BASE"
            HTML="$(curl -fsSL "$BASE/?v=$(date +%s)")"
            JS_PATH="$(echo "$HTML" | grep -oE '/assets/index-[^"]+\.js' | head -n1)"
            test -n "$JS_PATH" || { echo "❌ JS asset not found in HTML"; exit 1; }
            curl -fsSL "$BASE$JS_PATH?v=$(date +%s)" | grep -q "Todoアプリ!" \
              && { echo "✅ title found in JS on $BASE"; FOUND=1; break; }
          done
          test "$FOUND" = "1" || { echo "❌ 本番JSに 'Todoアプリ!' が見当たりません"; exit 1; }

      - name: Verify production version file matches commit
        run: |
          set -e
          SHA_LOCAL="${GITHUB_SHA}"
          PROD_COMMIT="$(curl -fsSL "https://todoapp-1758903137.web.app/__build.txt" | sed -n 's/^commit=\(.*\)$/\1/p')"
          echo "local=$SHA_LOCAL"
          echo "prod =$PROD_COMMIT"
          test -n "$PROD_COMMIT" || { echo "❌ __build.txt から commit を取得できません"; exit 1; }
          [ "$PROD_COMMIT" = "$SHA_LOCAL" ] && echo "✅ commit 一致" || { echo "❌ commit 不一致"; exit 1; }
